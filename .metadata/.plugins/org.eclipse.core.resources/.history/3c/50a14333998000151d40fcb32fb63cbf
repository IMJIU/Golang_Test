// filelist.go
 2 package main
 3 
 4 import (
 5     //"flag"
 6     "fmt"
 7     "os"
 8     "path/filepath"
 9     "strings"
10 )
11 
12 var (
13     ostype = os.Getenv("GOOS") // 获取系统类型
14 )
15 
16 var listfile []string //获取文件列表
17 
18 func Listfunc(path string, f os.FileInfo, err error) error {
19     var strRet string
20     strRet, _ = os.Getwd()
21     //ostype := os.Getenv("GOOS") // windows, linux
22 
23     if ostype == "windows" {
24         strRet += "\\"
25     } else if ostype == "linux" {
26         strRet += "/"
27     }
28 
29     if f == nil {
30         return err
31     }
32     if f.IsDir() {
33         return nil
34     }
35 
36     strRet += path //+ "\r\n"
37 
38     //用strings.HasSuffix(src, suffix)//判断src中是否包含 suffix结尾
39     ok := strings.HasSuffix(strRet, ".go")
40     if ok {
41 
42         listfile = append(listfile, strRet) //将目录push到listfile []string中
43     }
44     //fmt.Println(ostype) // print ostype
45     fmt.Println(strRet) //list the file
46 
47     return nil
48 }
49 
50 func getFileList(path string) string {
51     //var strRet string
52     err := filepath.Walk(path, Listfunc) //
53 
54     if err != nil {
55         fmt.Printf("filepath.Walk() returned %v\n", err)
56     }
57 
58     return " "
59 }
60 
61 func ListFileFunc(p []string) {
62     for index, value := range p {
63         fmt.Println("Index = ", index, "Value = ", value)
64     }
65 }
66 
67 func main() {
68     //flag.Parse()
69     //root := flag.Arg(0)
70     //fmt.Println()
71     var listpath string
72     fmt.Scanf("%s", &listpath)
73     getFileList(listpath)
74     ListFileFunc(listfile)
75     //getFileList(root)
76 
77 }